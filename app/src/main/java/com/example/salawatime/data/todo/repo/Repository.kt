package com.example.salawatime.data.todo.repoimport com.example.salawatime.data.todo.Taskimport com.example.salawatime.data.todo.database.todoDaoAppimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.collectimport kotlinx.coroutines.flow.flowimport javax.inject.Injectclass Repository @Inject constructor(private val daoApp: todoDaoApp)  {    suspend fun addTask(task: Task) = daoApp.addTask(task)    fun getAllTasks() : Flow<List<Task>> = flow {        daoApp.getAllTasksDistinctUntilChanged().collect {            emit(it)        }    }    suspend fun updateTask(task: Task) = daoApp.updateTask(task)    suspend fun deleteTask(task: Task) = daoApp.deleteTask(task)}